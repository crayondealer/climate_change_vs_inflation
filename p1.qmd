---
title: "Global climate change and contributing factors"
author: "Merwa Tariq"
output: powerpoint_presentation
---

## Shiny Documents

This Quarto document is made interactive using Shiny. Interactive documents allow readers to modify parameters and see the results immediately. Learn more about Shiny interactive documents at <https://quarto.org/docs/interactive/shiny/>.

## Inputs and Outputs

You can embed Shiny inputs and outputs in your document. Outputs are automatically updated whenever inputs change. This demonstrates how a standard R plot can be made interactive:

```{r}
library(shiny)
library(tidyverse)
library(dplyr)
library(maps)
library(ggrepel)
library(readxl)
library(scales)
library(shiny)
```


#importing world data to draw out a map
```{r}
world <- map_data("world")
```





#importing cleaned temperature data (cleaning in exporatory file)
```{r}
temperature <- read_csv('data/temperature.csv', show_col_types=FALSE) 
```

#plot1: temperature change across countries - multilinear chart
```{r}
temperature|>
  ggplot() +
  aes(x=Year, y=Value, colour=Area, group=Area ) +
  geom_line() +
  labs(y='Temperature Change in *C',
       title = "Temperature change across countries over the years" ) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5), 
        legend.position = "none",
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank(),
        axis.title.x = element_blank()) +
  scale_x_continuous(breaks = seq(1960, 2020, by = 5), expand = c(0, NA))+
  scale_y_continuous(expand = c(0, 0))
```

#transforming data to extract meaningful temperature change over the last decade to highlight countries where temperature change is significant.
```{r}
latest_temp_change <- temperature |>
  filter(Year>2010) |>
  drop_na(Value, Year) |>
  group_by(Area) |>
  do(model = lm(Value ~ as.numeric(Year), data = .)) |>
  summarise(
    Country = first(Area),
    intercept = coef(model)[1],
    slope = coef(model)[2]
  ) |>
  mutate(temp_change = slope*(2020)+intercept) |>
  select(Country, temp_change)
```

#joined previous decades temperature with map coordinates to look on the map
#note: could not mean out the lat/long properly to put labels on it so created highlight_labels myself.
```{r}
highlight_labels <- data.frame (Country  = c("China", "India", "Japan", "Russia", "EU", "USA"),
                  long = c(100.5476,	78.514,	135.2924, 102.1668,	21.6206,	-100.6253),
                  lat = c(35.0824,	23.3934,	35.4739,	60.5448,	49.8382,	38.7433),
                  group = c(435,838,886,1303,1387,1527)
                  )

inner_join(latest_temp_change, world, join_by(Country==region)) |>
  ggplot() +
  aes(x=long, y=lat, group=group) + 
  coord_fixed(1.3) +
  geom_polygon(aes(fill = temp_change)) +
  theme_minimal() +
  scale_fill_stepsn(breaks = seq(0.5, 3.5, by = 0.5),  
                    limits = c(0, 4), 
                    labels = seq(0.5, 3.5, by = 0.5),
                    colors=c("lemonchiffon1", "yellow1","orange","darkorange1","orangered2", "firebrick3","red4"),
                    guide = guide_colorsteps(even.steps = FALSE)) + 
  labs(title = "Global temperature change") +
  theme(axis.title=element_blank(), 
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.title = element_blank(),
        legend.position = "bottom",
        panel.grid = element_blank(),
        plot.title = element_text(hjust = 0.5)) +
  geom_text(data = highlight_labels, 
            aes(x = long, y = lat, label = Country),
            position = position_nudge(x=-0.5),
            color = "gray21",
            size=4)

#summarise by continent
#label important countries in maps
#caption include whats not that obvious
```























#reading greenhousegas emissions data which also has forest area data, created variable for countries to highlight(explored in exporatory data), and pivoted long to use data for later charts.
```{r}
ghg <- read_csv('data/wdi_ghg2.csv', show_col_types=FALSE) |>
  mutate(`Country Name` = case_when(
    `Country Name`=="Bahamas, The" ~ "Bahamas",
    `Country Name`=="Brunei Darussalam" ~ "Brunei",
    `Country Name`=="Cabo Verde" ~ "Cape Verde",
    `Country Name`=="Congo, Dem. Rep." ~ "Democratic Republic of the Congo",
    `Country Name`=="Congo, Rep." ~ "Republic of Congo",
    `Country Name`=="Cote d'Ivoire" ~ "Ivory Coast",
    `Country Name`=="Czechia" ~ "Czech Republic",
    `Country Name`=="Egypt, Arab Rep." ~ "Egypt",
    `Country Name`=="Czechia" ~ "CzechRepublic",
    `Country Name`=="Eswatini" ~ "Swaziland",
    `Country Name`=="Gambia, The" ~ "Gambia",
    `Country Name`=="Hong Kong SAR, China" ~ "Hong Kong",
    `Country Name`=="Iran, Islamic Rep." ~ "Iran",
    `Country Name`=="Korea, Dem. People's Rep." ~ "North Korea",
    `Country Name`=="Korea, Rep." ~ "South Korea",
    `Country Name`=="Kyrgyz Republic" ~ "Kyrgyzstan",
    `Country Name`=="Lao PDR" ~ "Laos",
    `Country Name`=="Macao SAR, China" ~ "Macao",
    `Country Name`=="Micronesia, Fed. Sts." ~ "Micronesia",
    `Country Name`=="Russian Federation" ~ "Russia",
    `Country Name`=="Sint Maarten (Dutch part)" ~ "Sint Maarten",
    `Country Name`=="Slovak Republic" ~ "Slovakia",
    `Country Name`=="St. Lucia" ~ "Saint Lucia",
    `Country Name`=="St. Martin (French part)" ~ "Saint Martin",
    `Country Name`=="Syrian Arab Republic" ~ "Syria",
    `Country Name`=="Turkiye" ~ "Turkey",
    `Country Name`=="United Kingdom" ~ "UK",
    `Country Name`=="United States" ~ "USA",
    `Country Name`=="Venezuela, RB" ~ "Venezuela",
    `Country Name`=="Viet Nam" ~ "Vietnam",
    `Country Name`=="West Bank and Gaza" ~ "Palestine",
    `Country Name`=="Yemen, Rep." ~ "Yemen",
    TRUE ~ `Country Name`)) 

rep_2 <- ghg |>
  filter(`Country Name` %in% c("Antigua and Barbuda", "Saint Kitts and Nevis", "Saint Vincent and the Grenadines", "Trinidad and Tobago"))

ghg <- rbind(rep_2 |> 
        mutate(`Country Name` = case_when(
          `Country Name`=="Antigua and Barbuda" ~ "Antigua",
        	`Country Name`=="Saint Kitts and Nevis" ~ "Saint Kitts",
          `Country Name`=="Saint Vincent and the Grenadines" ~ "Saint Vincent",
        	`Country Name`=="Trinidad and Tobago" ~ "Trinidad",
          TRUE ~ `Country Name`)
      ), 
      rep_2 |> 
        mutate(`Country Name` = case_when(
          `Country Name`=="Antigua and Barbuda" ~ "Barbuda",
        	`Country Name`=="Saint Kitts and Nevis" ~ "Nevis",
          `Country Name`=="Saint Vincent and the Grenadines" ~ "Grenadines",
        	`Country Name`=="Trinidad and Tobago" ~ "Tobago",
          TRUE ~ `Country Name`)
      ),
      ghg |>
        filter(!`Country Name` %in% c("Antigua and Barbuda", "Saint Kitts and Nevis", "Saint Vincent and the Grenadines", "Trinidad and Tobago", 'Africa Eastern and Southern', 'Africa Western and Central', 'Arab World', 'Caribbean small states', 'Central Europe and the Baltics', 'Early-demographic dividend', 'East Asia & Pacific', 'East Asia & Pacific (excluding high income)', 'East Asia & Pacific (IDA & IBRD countries)', 'Euro area', 'Europe & Central Asia', 'Europe & Central Asia (excluding high income)', 'Europe & Central Asia (IDA & IBRD countries)', 'Fragile and conflict affected situations', 'Heavily indebted poor countries (HIPC)', 'IBRD only', 'IDA & IBRD total', 'IDA blend', 'IDA only', 'IDA total', 'Late-demographic dividend', 'Latin America & Caribbean', 'Latin America & Caribbean (excluding high income)', 'Latin America & the Caribbean (IDA & IBRD countries)', 'Least developed countries: UN classification', 'Low & middle income', 'Middle East & North Africa', 'Middle East & North Africa (excluding high income)', 'Middle East & North Africa (IDA & IBRD countries)', 'North America', 'Not classified', 'OECD members', 'Other small states', 'Pacific island small states', 'Post-demographic dividend', 'Pre-demographic dividend', 'Small states', 'South Asia', 'South Asia (IDA & IBRD)', 'Sub-Saharan Africa', 'Sub-Saharan Africa (excluding high income)', 'Sub-Saharan Africa (IDA & IBRD countries)'))
)

highlights = c("USA", "China", "European Union", "Russia", "Japan", "India")

ghg_long <- ghg |>
  pivot_longer(cols = ends_with("]"), names_to = "Year", values_to = "Value") |>
  filter(Year>=1992 & Year<=2020) |>
  drop_na(Value) |>
  mutate(Year = as.numeric(sub("\\s*\\[.*\\]", "", Year)),
         Value = case_when(
           Value == ".." ~ NA_real_,
           TRUE ~ as.numeric(Value)/10**6),
         group = if_else(`Country Name` %in% highlights, `Country Name`, "Other"),
         group = as.factor(group)) |>
  mutate(group = fct_relevel(group, "Other", after = Inf)
  ) |>
  select(`Series Name`, `Country Name`, Year, Value, group) |>
  rename(Series=`Series Name`, Country=`Country Name`) |>
  ungroup() 

```

#separated forest area with ghg emissions data to view on same chart but different kinds of plots- line vs stacked area
```{r}
ghg_types_long <- ghg_long |>
  filter(Series %in% c('CO2 emissions (kt)', 'Methane emissions (kt of CO2 equivalent)', 'Nitrous oxide emissions (thousand metric tons of CO2 equivalent)', 'Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent)') & Country %in% "World") 

forest_long <- ghg_long |>
  filter(Series=="Forest area (sq. km)" & Country=="World")

ghg_types_long |>
  ggplot() +
  aes(x = Year) +
  geom_area(aes(y = Value, fill = factor(Series)), alpha=0.75 , linewidth=1, colour="white") +
  geom_line(data=forest_long, 
            aes(x=as.numeric(Year), y = Value),
            linewidth=1, colour="forestgreen", linetype="dashed") +
  geom_text_repel(data=forest_long, aes(label = Series, y = Value), max.overlaps=2, 
                  xlim = c(2010, 2015),
                  segment.size = .7) +
  labs(y = 'Greenhouse gas emissions (Bt)', 
       title = "Causes for Global Warming",
       caption = "*Greenhouse gas emissions (Billion Tonnes of CO2 equivalent)") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle=element_text(size=9),
    legend.position = "bottom",
    legend.title = element_blank(),
    axis.title.x = element_blank(),
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
  ) +
  scale_x_continuous(breaks = seq(1990, 2020, by = 5), expand = c(0, NA)) +
  scale_y_continuous(breaks = seq(0, 50, by = 10), limits = c(-2, 50), expand = c(0, NA),
                     sec.axis = sec_axis( trans=~.*1, name="Forest Area (1000 square km)")) +
  scale_color_manual(labels=c('CO2 emissions', 'Methane emissions', 'Nitrous oxide emissions', 'Other greenhouse gas emissions'),
                     values=c("lightskyblue1", "steelblue3", "steelblue4", "black"))+
  scale_fill_manual(labels=c('CO2 emissions', 'Methane emissions', 'Nitrous oxide emissions', 'Other greenhouse gas emissions'),
                    values=c("lightskyblue1", "steelblue3", "steelblue4", "black"))

```

#sketched country wise total ghg emissions. wanted to put label at the end of the line in line chart but it was messing up so resorted to put in legend
```{r}

ghg_long |>
  filter(Series=="Total greenhouse gas emissions (kt of CO2 equivalent)" & group != "Other" & !Country %in% c("World", 'Low income', 'Lower middle income', 'Middle income', 'Upper middle income', 'High income')) |>
  ggplot() +
  aes(x=Year, y=Value, group=Country ) +
  geom_line(data = ghg_long |> filter(Series=="Total greenhouse gas emissions (kt of CO2 equivalent)" & group == "Other" & !Country %in% c("World", 'Low income', 'Lower middle income', 'Middle income', 'Upper middle income', 'High income')),
            color = "grey75",
            alpha = .5) +
  geom_line(aes(colour=group), linewidth=1) +
  labs(y='GHG Emission (billion tonnes)',
       title = "Greenhouse gas emissions by each country") +
  scale_x_continuous(breaks = seq(1990, 2020, by = 5), expand = c(0, NA)) +
  scale_y_continuous(breaks = seq(0, 15, by = 2), limits=c(0,15), expand = c(0, NA)) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        axis.title.x = element_blank(),
        legend.title = element_blank(),
        legend.position = "right",
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank()) +
  scale_color_manual(values=c("red3", "aquamarine3", "gold3", "mediumpurple3", "steelblue3", "darkorange3"))+
  scale_fill_manual(values=c("red3", "aquamarine3", "gold3", "mediumpurple3", "steelblue3", "darkorange3"))

```

#ghg emission share chart over the last decade. data has been filtered and summarised.
```{r}
 ghg_long |>
  filter(Series=="Total greenhouse gas emissions (kt of CO2 equivalent)" & Year>=2010 & !Country %in% c("World", 'Low income', 'Lower middle income', 'Middle income', 'Upper middle income', 'High income')) |>
  drop_na(Value) |>
  group_by(group) |>
  summarise(total_emission=sum(Value)) |>
  arrange(total_emission) |>
  ggplot() +
  aes(x = "", y = total_emission, fill = factor(group, levels = as.character(group))) +
  geom_bar(stat = "identity", linewidth=1.5, color = "white") +
  coord_polar(theta = "y", start=pi, direction = -1) +
  scale_fill_manual(values = c("mediumpurple3", "steelblue3", "aquamarine3", "gold3", "darkorange3", "red3", "grey")) +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme_minimal() + 
  labs(title = "Greenhouse gas emissions share in the last decade") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text.x=element_blank(),
        panel.border = element_blank(),
        panel.grid=element_blank(),
        legend.position="none",
        plot.title = element_text(hjust = 0.5)) +
  geom_text(aes(label = paste0(group, '\n',percent(round(total_emission/sum(total_emission),2))),
                x=1.7), 
            size=4,
            position = position_stack(vjust = 0.5))
```

#highlighted countries' details in which of their sectors are contributing to ghg emissions
```{r}
ghg_long |>
  filter(Series %in% c("CO2 emissions from residential buildings and commercial and public services (% of total fuel combustion)", "CO2 emissions from other sectors, excluding residential buildings and commercial and public services (% of total fuel combustion)", "CO2 emissions from transport (% of total fuel combustion)", "CO2 emissions from manufacturing industries and construction (% of total fuel combustion)", "CO2 emissions from electricity and heat production, total (% of total fuel combustion)") & group!="Other") |>
  mutate(Value=Value*10**6) |>
  ggplot()+
  aes(x=Year, y=Value, fill=factor(Series)) + 
  geom_area(alpha=0.65 , linewidth=1, colour="white") +
  facet_wrap(~ group, scales = 'free' ) +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "bottom",
        legend.title = element_blank(),
        axis.title.x = element_blank(),
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.spacing = unit(1, "lines")) +
  labs(y='GHG Emission (billion tonnes)',
       title="Sector-wise: GHG Emission Percentage")  +
  scale_x_continuous(breaks = seq(1990, 2020, by = 10), limits = c(1990,2020), expand = c(0, NA)) +
  scale_y_continuous(expand = c(0, NA)) +
  scale_color_manual(labels=c('Residential, commercial and public services', 'Others', 'Transport', 'Manufacturing Industries and Construction', 'Electricity and Heat production'),
                     values=c("honeydew2","olivedrab2","olivedrab3", "darkolivegreen4", "darkslategrey"))+
  scale_fill_manual(labels=c('Residential, commercial & public services', 'Others', 'Transport', 'Manufacturing Industries & Construction', 'Electricity & Heat production'),
                    values=c("honeydew2","olivedrab2","olivedrab3", "darkolivegreen4", "darkslategrey"))
```

#highlighted countries' details in how they are contributing to ghg emissions
```{r}
ghg_long |>
  filter(Series %in% c("CO2 emissions from gaseous fuel consumption (kt)", "CO2 emissions from liquid fuel consumption (kt)", "CO2 emissions from solid fuel consumption (kt)") & group!="Other" & Year>2010) |>
  group_by(Country, Series) |>
  summarise(total_ghg = sum(Value, na.rm = TRUE)) |>
  arrange(desc(total_ghg)) |>
  ggplot() +
  aes(y = reorder(Country, total_ghg), x = total_ghg, fill = factor(Series)) + 
  geom_bar(stat = "identity", position = "stack", color = "white", width=0.75, alpha=0.75) +
  theme_minimal() + 
  theme(
    plot.title = element_text(hjust = 0.5),
    legend.position = c(0.9,0.2),
    legend.title = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
  ) +
  labs(x='GHG Emission (billion tonnes)',
    title = "Resources utilized in GHG Emissions"
  )  +
  scale_y_discrete(expand = c(0, NA)) +
  scale_x_continuous(expand = c(0, NA)) +
  scale_fill_manual(
    labels = c('Gaseous fuel', 'Liquid fuel', 'Solid fuel'),
    values = c("peachpuff", "salmon3", "salmon4")
  )

```



